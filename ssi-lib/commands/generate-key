#!/bin/bash

usage_string="usage: 

$ $(basename "$0") --storage FOLDER --export FILENAME [OPTIONS]

Generate key and export to file. Overwrites existing files.

Arguments:
  --storage FOLDER                              Folder containing key file
  --export FILENAME                             File containing dumped key

Options:
  -a, --algorithm [Ed25519|secp256k1|secp256r1|RSA]  Keygen algorithm. Default: secp256k1

Examples
  $ $(basename "$0") --algorithm secp256k1 --export key.json
"

usage() { echo -n "$usage_string" 1>&2; }

set -e

ALGORITHM=secp256k1
FILENAME=
STORAGE=

while [[ $# -gt 0 ]]
do
    arg="$1"
    case $arg in
        -a|--algorithm)
            case "$2" in
                Ed25519|secp256k1|secp256r1|RSA)
                    ALGORITHM="$2"
                    shift
                    ;;
                *)
                    echo "[-] Unknown keygen algorithm: ${2}"
                    usage
                    exit 1
            esac
            shift
            ;;
        --storage)
            STORAGE="$2"
            shift
            shift
            ;;
        --export)
            FILENAME="$2"
            shift
            shift
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        *)
            echo "[-] Unknown option: ${arg}"
            usage
            exit 1
    esac
done

if [ -z ${STORAGE} ]; then
    echo "[-] No storage provided"
    usage && exit 1
fi


if [ -z ${FILENAME} ]; then
    echo "[-] No export file provided"
    usage && exit 1
fi


waltid-cli key generate \
    --keyType=${ALGORITHM} \
    --output="${STORAGE}/${FILENAME}"

exit 0
